#
# Copyright 2017 Okta
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
swagger: '2.0'
info:
  title: Okta API
  description: Allows customers to easily access the Okta API
  termsOfService: 'http://developer.okta.com/terms/'
  contact:
    name: Okta Developer Team
    email: devex-public@okta.com
    url: 'http://developer.okta.com/'
  license:
    name: Apache-2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.11.0
externalDocs:
  description: Find more info here
  url: 'http://developer.okta.com/docs/api/getting_started/design_principles.html'
host: your-subdomain.okta.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  api_token:
    description: 'SSWS {API Token}'
    in: header
    name: Authorization
    type: apiKey
paths:
  /api/v1/apps:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates apps added to your organization with pagination. A subset of
        apps can be returned that match a supported filter expression or query.
      operationId: listApplications
      parameters:
        - in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of apps
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: >-
            Filters apps by status, user.id, group.id or credentials.signing.kid
            expression
          in: query
          name: filter
          type: string
        - description: >-
            Traverses users link relationship and optionally embeds Application
            User resource
          in: query
          name: expand
          type: string
        - default: false
          in: query
          name: includeNonDeleted
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Application'
            type: array
      security:
        - api_token: []
      summary: List Applications
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: Adds a new application to your Okta organization.
      operationId: createApplication
      parameters:
        - in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
        - default: true
          description: Executes activation lifecycle operation when creating the app
          in: query
          name: activate
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Add Application
      tags:
        - Application
  '/api/v1/apps/{appId}':
    delete:
      consumes:
        - application/json
      description: Removes an inactive application.
      operationId: deleteApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Delete Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches an application from your Okta organization by `id`.
      operationId: getApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Get Application
      tags:
        - Application
    put:
      consumes:
        - application/json
      description: Updates an application in your organization.
      operationId: updateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Application'
      security:
        - api_token: []
      summary: Update Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys':
    get:
      consumes:
        - application/json
      description: Enumerates key credentials for an application
      operationId: listApplicationKeys
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/JsonWebKey'
            type: array
      security:
        - api_token: []
      summary: List Key Credentials for Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys/{keyId}':
    get:
      consumes:
        - application/json
      description: >-
        Gets a specific [application key
        credential](#application-key-credential-model) by `kid`
      operationId: getApplicationKey
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Get Key Credential for Application
      tags:
        - Application
  '/api/v1/apps/{appId}/credentials/keys/{keyId}/clone':
    post:
      consumes:
        - application/json
      description: >-
        Clones a X.509 certificate for an application key credential from a
        source application to target application.
      operationId: cloneApplicationKey
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: keyId
          required: true
          type: string
        - description: Unique key of the target Application
          in: query
          name: targetAid
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/JsonWebKey'
      security:
        - api_token: []
      summary: Clone Application Key Credential
      tags:
        - Application
  '/api/v1/apps/{appId}/groups':
    get:
      consumes:
        - application/json
      description: Enumerates group assignments for an application.
      operationId: listApplicationGroupAssignments
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of assignments
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/ApplicationGroupAssignment'
            type: array
      security:
        - api_token: []
      summary: List Groups Assigned to Application
      tags:
        - Application
  '/api/v1/apps/{appId}/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Removes a group assignment from an application.
      operationId: deleteApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Remove Group from Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches an application group assignment
      operationId: getApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      security:
        - api_token: []
      summary: Get Assigned Group for Application
      tags:
        - Application
    put:
      consumes:
        - application/json
      description: Assigns a group to an application
      operationId: createApplicationGroupAssignment
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
        - in: body
          name: applicationGroupAssignment
          required: true
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ApplicationGroupAssignment'
      security:
        - api_token: []
      summary: Assign Group to Application
      tags:
        - Application
  '/api/v1/apps/{appId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates an inactive application.
      operationId: activateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Activate Application
      tags:
        - Application
  '/api/v1/apps/{appId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates an active application.
      operationId: deactivateApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Deactivate Application
      tags:
        - Application
  '/api/v1/apps/{appId}/users':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all assigned [application users](#application-user-model) for
        an application.
      operationId: listApplicationUsers
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: query
          name: q
          type: string
        - in: query
          name: query_scope
          type: string
        - description: specifies the pagination cursor for the next page of assignments
          in: query
          name: after
          type: string
        - default: -1
          description: specifies the number of results for a page
          format: int32
          in: query
          name: limit
          type: integer
        - in: query
          name: filter
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AppUser'
            type: array
      security:
        - api_token: []
      summary: List Users Assigned to Application
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: >-
        Assigns an user to an application with
        [credentials](#application-user-credentials-object) and an app-specific
        [profile](#application-user-profile-object). Profile mappings defined
        for the application are first applied before applying any profile
        properties specified in the request.
      operationId: assignUserToApplication
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: body
          name: appUser
          required: true
          schema:
            $ref: '#/definitions/AppUser'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Assign User to Application for SSO & Provisioning
      tags:
        - Application
  '/api/v1/apps/{appId}/users/{userId}':
    delete:
      consumes:
        - application/json
      description: Removes an assignment for a user from an application.
      operationId: deleteApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Remove User from Application
      tags:
        - Application
    get:
      consumes:
        - application/json
      description: Fetches a specific user assignment for application by `id`.
      operationId: getApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Get Assigned User for Application
      tags:
        - Application
    post:
      consumes:
        - application/json
      description: Updates a user's profile for an application
      operationId: updateApplicationUser
      parameters:
        - in: path
          name: appId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
        - in: body
          name: appUser
          required: true
          schema:
            $ref: '#/definitions/AppUser'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AppUser'
      security:
        - api_token: []
      summary: Update Application Profile for Assigned User
      tags:
        - Application
  /api/v1/groups:
    get:
      consumes:
        - application/json
      description: >-
        Enumerates groups in your organization with pagination. A subset of
        groups can be returned that match a supported filter expression or
        query.
      operationId: listGroups
      parameters:
        - description: Searches the name property of groups for matching value
          in: query
          name: q
          type: string
        - description: Filter expression for groups
          in: query
          name: filter
          type: string
        - description: Specifies the pagination cursor for the next page of groups
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of group results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      summary: List Groups
      tags:
        - Group
    post:
      consumes:
        - application/json
      description: Adds a new group with `OKTA_GROUP` type to your organization.
      operationId: createGroup
      parameters:
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: Add Group
      tags:
        - Group
  /api/v1/groups/rules:
    get:
      consumes:
        - application/json
      description: Lists all group rules for your organization.
      operationId: listRules
      parameters:
        - default: -1
          description: Specifies the number of rule results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - description: Specifies the pagination cursor for the next page of rules
          in: query
          name: after
          type: string
        - default: ''
          in: query
          name: expand
          type: string
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/GroupRule'
            type: array
      security:
        - api_token: []
      summary: List Group Rules
      tags:
        - Group
    post:
      consumes:
        - application/json
      description: >-
        Creates a group rule to dynamically add users to the specified group if
        they match the condition
      operationId: createRule
      parameters:
        - in: body
          name: groupRule
          required: true
          schema:
            $ref: '#/definitions/GroupRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      summary: Create Group Rule
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}':
    delete:
      consumes:
        - application/json
      description: Removes a specific group rule by id from your organization
      operationId: deleteRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
        - default: false
          in: query
          name: removeUsers
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Delete a group Rule
      tags:
        - Group
    get:
      consumes:
        - application/json
      description: Fetches a specific group rule by id from your organization
      operationId: getRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
        - default: ''
          in: query
          name: expand
          type: string
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      summary: Get Group Rule
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: Success
      operationId: updateRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
        - in: body
          name: groupRule
          required: true
          schema:
            $ref: '#/definitions/GroupRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GroupRule'
      security:
        - api_token: []
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: Activates a specific group rule by id from your organization
      operationId: activateRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Activate a group Rule
      tags:
        - Group
  '/api/v1/groups/rules/{ruleId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: Deactivates a specific group rule by id from your organization
      operationId: deactivateRule
      parameters:
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Deactivate a group Rule
      tags:
        - Group
  '/api/v1/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Removes a group with `OKTA_GROUP` type from your organization.
      operationId: deleteGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Remove Group
      tags:
        - Group
    get:
      consumes:
        - application/json
      description: Lists all group rules for your organization.
      operationId: getGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: List Group Rules
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: >-
        Updates the profile for a group with `OKTA_GROUP` type from your
        organization.
      operationId: updateGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: body
          name: group
          required: true
          schema:
            $ref: '#/definitions/Group'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Group'
      security:
        - api_token: []
      summary: Update Group
      tags:
        - Group
  '/api/v1/groups/{groupId}/users':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all [users](/docs/api/resources/users.html#user-model) that
        are a member of a group.
      operationId: listGroupUsers
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - description: Specifies the pagination cursor for the next page of users
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of user results in a page
          format: int32
          in: query
          name: limit
          type: integer
        - default: all
          in: query
          name: managedBy
          type: string
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
        - api_token: []
      summary: List Group Members
      tags:
        - Group
  '/api/v1/groups/{groupId}/users/{userId}':
    delete:
      consumes:
        - application/json
      description: >-
        Removes a [user](users.html#user-model) from a group with `OKTA_GROUP`
        type.
      operationId: removeGroupUser
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Remove User from Group
      tags:
        - Group
    put:
      consumes:
        - application/json
      description: 'Adds a [user](users.html#user-model) to a group with `OKTA_GROUP` type.'
      operationId: addUserToGroup
      parameters:
        - in: path
          name: groupId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Add User to Group
      tags:
        - Group
  /api/v1/logs:
    get:
      consumes:
        - application/json
      description: >-
        The Okta System Log API provides read access to your organization’s
        system log. This API provides more functionality than the Events API
      operationId: getLogs
      parameters:
        - in: query
          name: until
          type: string
        - in: query
          name: since
          type: string
        - in: query
          name: filter
          type: string
        - in: query
          name: q
          type: string
        - default: 100
          in: query
          name: limit
          type: integer
        - default: ASCENDING
          in: query
          name: sortOrder
          type: string
        - in: query
          name: after
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/LogEvent'
            type: array
      security:
        - api_token: []
      summary: Fetch a list of events from your Okta organization system log.
      tags:
        - Log
  /api/v1/policies:
    get:
      consumes:
        - application/json
      description: ''
      operationId: listPolicies
      parameters:
        - in: query
          name: type
          required: true
          type: string
        - in: query
          name: status
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
        - default: ''
          in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Policy'
            type: array
      security:
        - api_token: []
      tags:
        - Policy
    post:
      consumes:
        - application/json
      description: ''
      operationId: createPolicy
      parameters:
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/Policy'
        - default: true
          in: query
          name: activate
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}':
    delete:
      consumes:
        - application/json
      description: ''
      operationId: deletePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
    get:
      consumes:
        - application/json
      description: ''
      operationId: getPolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - default: ''
          in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
    put:
      consumes:
        - application/json
      description: ''
      operationId: updatePolicy
      parameters:
        - in: body
          name: policy
          required: true
          schema:
            $ref: '#/definitions/Policy'
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Policy'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: ''
      operationId: activatePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: ''
      operationId: deactivatePolicy
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules':
    get:
      consumes:
        - application/json
      description: ''
      operationId: listPolicyRules
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/PolicyRule'
            type: array
      security:
        - api_token: []
      tags:
        - Policy
    post:
      consumes:
        - application/json
      description: ''
      operationId: addPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/PolicyRule'
        - default: true
          in: query
          name: activate
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}':
    delete:
      consumes:
        - application/json
      description: ''
      operationId: deletePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
    get:
      consumes:
        - application/json
      description: ''
      operationId: getPolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
    put:
      consumes:
        - application/json
      description: ''
      operationId: updatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
        - in: body
          name: policyRule
          required: true
          schema:
            $ref: '#/definitions/PolicyRule'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/PolicyRule'
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: ''
      operationId: activatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
  '/api/v1/policies/{policyId}/rules/{ruleId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: ''
      operationId: deactivatePolicyRule
      parameters:
        - in: path
          name: policyId
          required: true
          type: string
        - in: path
          name: ruleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - Policy
  /api/v1/sessions:
    post:
      consumes:
        - application/json
      description: >-
        Creates a new session for a user with a valid session token. Use this
        API if, for example, you want to set the session cookie yourself instead
        of allowing Okta to set it, or want to hold the session ID in order to
        delete a session via the API instead of visiting the logout URL.
      operationId: createSession
      parameters:
        - in: body
          name: createSessionRequest
          required: true
          schema:
            $ref: '#/definitions/CreateSessionRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      summary: Create Session with Session Token
      tags:
        - Session
  '/api/v1/sessions/{sessionId}':
    delete:
      consumes:
        - application/json
      description: ''
      operationId: endSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Close Session
      tags:
        - Session
    get:
      consumes:
        - application/json
      description: Get details about a session.
      operationId: getSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      tags:
        - Session
  '/api/v1/sessions/{sessionId}/lifecycle/refresh':
    post:
      consumes:
        - application/json
      description: ''
      operationId: refreshSession
      parameters:
        - in: path
          name: sessionId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Session'
      security:
        - api_token: []
      summary: Refresh Session
      tags:
        - Session
  /api/v1/users:
    get:
      consumes:
        - application/json
      description: >-
        Lists users in your organization with pagination in most cases.  A
        subset of users can be returned that match a supported filter expression
        or search criteria.
      operationId: listUsers
      parameters:
        - description: 'Finds a user that matches firstName, lastName, and email properties'
          in: query
          name: q
          type: string
        - description: Specifies the pagination cursor for the next page of users
          in: query
          name: after
          type: string
        - default: -1
          description: Specifies the number of results returned
          format: int32
          in: query
          name: limit
          type: integer
        - description: Filters users with a supported expression for a subset of properties
          in: query
          name: filter
          type: string
        - in: query
          name: format
          type: string
        - description: >-
            Searches for users with a supported filtering  expression for most
            properties
          in: query
          name: search
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/User'
            type: array
      security:
        - api_token: []
      summary: List Users
      tags:
        - User
    post:
      consumes:
        - application/json
      description: >-
        Creates a new user in your Okta organization with or without
        credentials.
      operationId: createUser
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/User'
        - default: true
          description: Executes activation lifecycle operation when creating the user
          in: query
          name: activate
          type: boolean
        - default: false
          description: >-
            Indicates whether to create a user with a specified authentication
            provider
          in: query
          name: provider
          type: boolean
        - default: ''
          description: >-
            With activate=true, set nextLogin to "changePassword" to have the
            password be EXPIRED, so user must change it the next time they log
            in.
          in: query
          name: nextLogin
          type: string
          x-okta-added-version: 0.14.0
          x-openapi-v3-schema-ref: '#/definitions/UserNextLogin'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Create User
      tags:
        - User
  '/api/v1/users/{userId}':
    delete:
      consumes:
        - application/json
      description: >-
        Deletes a user permanently.  This operation can only be performed on
        users that have a `DEPROVISIONED` status.  **This action cannot be
        recovered!**
      operationId: deactivateOrDeleteUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Delete User
      tags:
        - User
    get:
      consumes:
        - application/json
      description: Fetches a user from your Okta organization.
      operationId: getUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Get User
      tags:
        - User
    put:
      consumes:
        - application/json
      description: >-
        Update a user's profile and/or credentials using strict-update
        semantics.
      operationId: updateUser
      parameters:
        - in: body
          name: user
          required: true
          schema:
            $ref: '#/definitions/User'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: strict
          type: boolean
          x-okta-added-version: 1.10.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/User'
      security:
        - api_token: []
      summary: Update User
      tags:
        - User
  '/api/v1/users/{userId}/appLinks':
    get:
      consumes:
        - application/json
      description: >-
        Fetches appLinks for all direct or indirect (via group membership)
        assigned applications.
      operationId: listAppLinks
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: showAll
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/AppLink'
            type: array
      security:
        - api_token: []
      summary: Get Assigned App Links
      tags:
        - User
  '/api/v1/users/{userId}/credentials/change_password':
    post:
      consumes:
        - application/json
      description: >-
        Changes a user's password by validating the user's current password. 
        This operation can only be performed on users in `STAGED`, `ACTIVE`,
        `PASSWORD_EXPIRED`, or `RECOVERY` status that have a valid [password
        credential](#password-object)
      operationId: changePassword
      parameters:
        - in: body
          name: changePasswordRequest
          required: true
          schema:
            $ref: '#/definitions/ChangePasswordRequest'
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: strict
          type: boolean
          x-okta-added-version: 1.10.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserCredentials'
      security:
        - api_token: []
      summary: Change Password
      tags:
        - User
  '/api/v1/users/{userId}/credentials/change_recovery_question':
    post:
      consumes:
        - application/json
      description: >-
        Changes a user's recovery question & answer credential by validating the
        user's current password.  This operation can only be performed on users
        in **STAGED**, **ACTIVE** or **RECOVERY** `status` that have a valid
        [password credential](#password-object)
      operationId: changeRecoveryQuestion
      parameters:
        - in: body
          name: userCredentials
          required: true
          schema:
            $ref: '#/definitions/UserCredentials'
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserCredentials'
      security:
        - api_token: []
      summary: Change Recovery Question
      tags:
        - User
  '/api/v1/users/{userId}/credentials/forgot_password':
    post:
      consumes:
        - application/json
      description: >-
        Generates a one-time token (OTT) that can be used to reset a user's
        password.  The user will be required to validate their security
        question's answer when visiting the reset link.  This operation can only
        be performed on users with a valid [recovery question
        credential](#recovery-question-object) and have an `ACTIVE` status.
      operationId: forgotPassword
      parameters:
        - in: body
          name: userCredentials
          schema:
            $ref: '#/definitions/UserCredentials'
        - in: path
          name: userId
          required: true
          type: string
        - default: true
          in: query
          name: sendEmail
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForgotPasswordResponse'
      security:
        - api_token: []
      summary: Forgot Password
      tags:
        - User
  '/api/v1/users/{userId}/factors':
    get:
      consumes:
        - application/json
      description: Enumerates all the enrolled factors for the specified user
      operationId: listFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Factor'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
    post:
      consumes:
        - application/json
      description: 'Enrolls a user with a supported [factor](#list-factors-to-enroll)'
      operationId: addFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - description: Factor
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Factor'
        - default: false
          in: query
          name: updatePhone
          type: boolean
        - description: id of SMS template (only for SMS factor)
          in: query
          name: templateId
          type: string
        - default: 300
          format: int32
          in: query
          name: tokenLifetimeSeconds
          type: integer
          x-okta-added-version: 1.3.0
        - default: false
          in: query
          name: activate
          type: boolean
          x-okta-added-version: 1.3.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Factor'
      security:
        - api_token: []
      summary: Enroll Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/catalog':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all the [supported factors](#supported-factors-for-providers)
        that can be enrolled for the specified user
      operationId: listSupportedFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Factor'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/questions':
    get:
      consumes:
        - application/json
      description: >-
        Enumerates all available security questions for a user's `question`
        factor
      operationId: listSupportedSecurityQuestions
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/SecurityQuestion'
            type: array
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}':
    delete:
      consumes:
        - application/json
      description: >-
        Unenrolls an existing factor for the specified user, allowing the user
        to enroll a new factor.
      operationId: deleteFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - UserFactor
    get:
      consumes:
        - application/json
      description: Fetches a factor for the specified user
      operationId: getFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Factor'
      security:
        - api_token: []
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: >-
        The `sms` and `token:software:totp` [factor types](#factor-type) require
        activation to complete the enrollment process.
      operationId: activateFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyFactorRequest'
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Factor'
            type: object
      security:
        - api_token: []
      summary: Activate Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/factors/{factorId}/verify':
    post:
      consumes:
        - application/json
      description: 'Verifies an OTP for a `token` or `token:hardware` factor'
      operationId: verifyFactor
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: factorId
          required: true
          type: string
        - in: query
          name: templateId
          type: string
        - default: 300
          format: int32
          in: query
          name: tokenLifetimeSeconds
          type: integer
          x-okta-added-version: 1.3.0
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/VerifyFactorRequest'
        - in: header
          name: X-Forwarded-For
          type: string
          x-okta-added-version: 1.11.0
        - in: header
          name: User-Agent
          type: string
          x-okta-added-version: 1.11.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/VerifyFactorResponse'
      security:
        - api_token: []
      summary: Verify MFA Factor
      tags:
        - UserFactor
  '/api/v1/users/{userId}/groups':
    get:
      consumes:
        - application/json
      description: Fetches the groups of which the user is a member.
      operationId: listUserGroups
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      summary: Get Member Groups
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/activate':
    post:
      consumes:
        - application/json
      description: >-
        Activates a user.  This operation can only be performed on users with a
        `STAGED` status.  Activation of a user is an asynchronous operation. 
        The user will have the `transitioningToStatus` property with a value of
        `ACTIVE` during activation to indicate that the user hasn't completed
        the asynchronous operation.  The user will have a status of `ACTIVE`
        when the activation process is complete.
      operationId: activateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: true
          description: Sends an activation email to the user if true
          in: query
          name: sendEmail
          required: true
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserActivationToken'
      security:
        - api_token: []
      summary: Activate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/deactivate':
    post:
      consumes:
        - application/json
      description: >-
        Deactivates a user.  This operation can only be performed on users that
        do not have a `DEPROVISIONED` status.  Deactivation of a user is an
        asynchronous operation.  The user will have the `transitioningToStatus`
        property with a value of `DEPROVISIONED` during deactivation to indicate
        that the user hasn't completed the asynchronous operation.  The user
        will have a status of `DEPROVISIONED` when the deactivation process is
        complete.
      operationId: deactivateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          in: query
          name: sendEmail
          type: boolean
          x-okta-added-version: 1.5.0
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Deactivate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/expire_password':
    post:
      consumes:
        - application/json
      description: >-
        This operation transitions the user to the status of `PASSWORD_EXPIRED`
        so that the user is required to change their password at their next
        login.
      operationId: expirePassword
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          description: 'Sets the user''s password to a temporary password,  if true'
          in: query
          name: tempPassword
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TempPassword'
      security:
        - api_token: []
      summary: Expire Password
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reset_factors':
    post:
      consumes:
        - application/json
      description: >-
        This operation resets all factors for the specified user. All MFA factor
        enrollments returned to the unenrolled state. The user's status remains
        ACTIVE. This link is present only if the user is currently enrolled in
        one or more MFA factors.
      operationId: resetAllFactors
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Reset Factors
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reset_password':
    post:
      consumes:
        - application/json
      description: >-
        Generates a one-time token (OTT) that can be used to reset a user's
        password.  The OTT link can be automatically emailed to the user or
        returned to the API caller and distributed using a custom flow.
      operationId: resetPassword
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: provider
          type: string
          x-openapi-v3-schema-ref: '#/definitions/AuthenticationProviderType'
        - in: query
          name: sendEmail
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ResetPasswordToken'
      security:
        - api_token: []
      summary: Reset Password
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/suspend':
    post:
      consumes:
        - application/json
      description: >-
        Suspends a user.  This operation can only be performed on users with an
        `ACTIVE` status.  The user will have a status of `SUSPENDED` when the
        process is complete.
      operationId: suspendUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Suspend User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/reactivate':
    post:
      consumes:
        - application/json
      description: >-
        Reactivates a user.  This operation can only be performed on users with
        a `PROVISIONED` status.  This operation restarts the activation workflow
        if for some reason the user activation was not completed when using the
        activationToken from [Activate User](#activate-user).
      operationId: reactivateUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          description: Sends an activation email to the user if true
          in: query
          name: sendEmail
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/UserActivationToken'
      security:
        - api_token: []
      summary: Reactivate User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/unlock':
    post:
      consumes:
        - application/json
      description: >-
        Unlocks a user with a `LOCKED_OUT` status and returns them to `ACTIVE`
        status.  Users will be able to login with their current password.
      operationId: unlockUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Unlock User
      tags:
        - User
  '/api/v1/users/{userId}/lifecycle/unsuspend':
    post:
      consumes:
        - application/json
      description: >-
        Unsuspends a user and returns them to the `ACTIVE` state.  This
        operation can only be performed on users that have a `SUSPENDED` status.
      operationId: unsuspendUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      summary: Unsuspend User
      tags:
        - User
  '/api/v1/users/{userId}/roles':
    get:
      consumes:
        - application/json
      description: Lists all roles assigned to a user.
      operationId: listAssignedRoles
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: query
          name: expand
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Role'
            type: array
      security:
        - api_token: []
      tags:
        - User
    post:
      consumes:
        - application/json
      description: Assigns a role to a user.
      operationId: addRoleToUser
      parameters:
        - in: body
          name: role
          required: true
          schema:
            $ref: '#/definitions/Role'
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '201':
          description: Success
          schema:
            $ref: '#/definitions/Role'
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}':
    delete:
      consumes:
        - application/json
      description: Unassigns a role from a user.
      operationId: removeRoleFromUser
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/groups':
    get:
      consumes:
        - application/json
      description: Success
      operationId: listGroupTargetsForRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: query
          name: after
          type: string
        - default: -1
          format: int32
          in: query
          name: limit
          type: integer
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            items:
              $ref: '#/definitions/Group'
            type: array
      security:
        - api_token: []
      tags:
        - User
#GFS
  '/api/v1/users/{userId}/idps/':
      get:
        consumes:
          - application/json
        description: Success
        operationId: listUserIdps
        parameters:
          - in: path
            name: userId
            required: true
            type: string
          - in: query
            name: after
            type: string
          - default: -1
            format: int32
            in: query
            name: limit
            type: integer
        produces:
          - application/json
        responses:
          '200':
            description: Success
            schema:
              items:
                $ref: '#/definitions/Idps'
              type: array
        security:
          - api_token: []
        tags:
          - User
  '/api/v1/users/{userId}/roles/{roleId}/targets/groups/{groupId}':
    delete:
      consumes:
        - application/json
      description: Success
      operationId: removeGroupTargetFromRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          '200':
            description: Success
            schema:
              items:
                $ref: '#/definitions/Idps'
              type: array
      security:
        - api_token: []
      tags:
        - User
    put:
      consumes:
        - application/json
      description: Success
      operationId: addGroupTargetToRole
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - in: path
          name: roleId
          required: true
          type: string
        - in: path
          name: groupId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
  '/api/v1/users/{userId}/sessions':
    delete:
      consumes:
        - application/json
      description: >-
        Removes all active identity provider sessions. This forces the user to
        authenticate on the next operation. Optionally revokes OpenID Connect
        and OAuth refresh and access tokens issued to the user.
      operationId: endAllUserSessions
      parameters:
        - in: path
          name: userId
          required: true
          type: string
        - default: false
          description: Revoke issued OpenID Connect and OAuth refresh and access tokens
          in: query
          name: oauthTokens
          type: boolean
      produces:
        - application/json
      responses:
        '200':
          description: Success
      security:
        - api_token: []
      tags:
        - User
#GFS mock schema endpoint
  /api/v1/meta/schemas/user/default:
      get:
        description: >-
          The Okta System Log API provides read access to your organization’s
          system log. This API provides more functionality than the Events API
        operationId: getUserSchema
        produces:
          - application/json
        responses:
          '200':
            description: Success
            schema:
              items:
                $ref: '#/definitions/UserSchema'
              type: array
        security:
          - api_token: []
        summary: Fetch a list of events from your Okta organization system log.
        tags:
          - UserSchema
#GFS Idp service
  '/api/v1/idps/{idpId}/users/{userId}':
    get:
      consumes:
        - application/json
      description: Fetches a linked IdP user by ID.
      operationId: getIdpUser
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Idp'
      security:
        - api_token: []
      tags:
        - Idp
    delete:
      consumes:
        - application/json
      description: Unlink a idp from a user.
      operationId: unlinkUserFromIdp
      parameters:
        - in: path
          name: idpId
          required: true
          type: string
        - in: path
          name: userId
          required: true
          type: string
      produces:
        - application/json
      responses:
        '204':
          description: Success
      security:
        - api_token: []
      tags:
        - Idp
#GFS
definitions:
  AppLink:
    properties:
      appAssignmentId:
        readOnly: true
        type: string
      appInstanceId:
        readOnly: true
        type: string
      appName:
        readOnly: true
        type: string
      credentialsSetup:
        readOnly: true
        type: boolean
      hidden:
        readOnly: true
        type: boolean
      id:
        readOnly: true
        type: string
      label:
        readOnly: true
        type: string
      linkUrl:
        readOnly: true
        type: string
      logoUrl:
        readOnly: true
        type: string
      sortOrder:
        readOnly: true
        type: integer
    type: object
    x-okta-tags:
      - User
  AppUser:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/AppUserCredentials'
      externalId:
        readOnly: true
        type: string
      id:
        type: string
      lastSync:
        format: date-time
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      passwordChanged:
        format: date-time
        readOnly: true
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
      scope:
        type: string
      status:
        readOnly: true
        type: string
      statusChanged:
        format: date-time
        readOnly: true
        type: string
      syncState:
        readOnly: true
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: userId
            src: id
          - dest: appUser
            self: true
        operationId: updateApplicationUser
      - alias: delete
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: userId
            src: id
        operationId: deleteApplicationUser
    x-okta-tags:
      - Application
  AppUserCredentials:
    properties:
      password:
        $ref: '#/definitions/AppUserPasswordCredential'
      userName:
        type: string
    type: object
    x-okta-tags:
      - Application
  AppUserPasswordCredential:
    properties:
      value:
        format: password
        type: string
    x-okta-tags:
      - Application
#GFS removed read only
  Application:
    properties:
      _embedded:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      accessibility:
        $ref: '#/definitions/ApplicationAccessibility'
      created:
        format: date-time
        #readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/ApplicationCredentials'
      features:
        items:
          type: string
        type: array
      id:
        #readOnly: true
        type: string
      label:
        type: string
      lastUpdated:
        format: date-time
        #readOnly: true
        type: string
      licensing:
        $ref: '#/definitions/ApplicationLicensing'
      name:
        #readOnly: true
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
      settings:
        $ref: '#/definitions/ApplicationSettings'
      signOnMode:
        $ref: '#/definitions/ApplicationSignOnMode'
      status:
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
        #readOnly: true
        type: string
      visibility:
        $ref: '#/definitions/ApplicationVisibility'
    type: object
#GFS
    x-okta-crud:
      - alias: read
        arguments:
          - dest: appId
            src: id
        operationId: getApplication
      - alias: update
        arguments:
          - dest: appId
            src: id
          - dest: application
            self: true
        operationId: updateApplication
      - alias: delete
        arguments:
          - dest: appId
            src: id
        operationId: deleteApplication
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: appId
            src: id
        operationId: activateApplication
      - alias: deactivate
        arguments:
          - dest: appId
            src: id
        operationId: deactivateApplication
      - alias: listApplicationUsers
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationUsers
      - alias: assignUserToApplication
        arguments:
          - dest: appId
            src: id
        operationId: assignUserToApplication
      - alias: getApplicationUser
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationUser
      - alias: createApplicationGroupAssignment
        arguments:
          - dest: appId
            src: id
        operationId: createApplicationGroupAssignment
      - alias: getApplicationGroupAssignment
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationGroupAssignment
      - alias: cloneApplicationKey
        arguments:
          - dest: appId
            src: id
        operationId: cloneApplicationKey
      - alias: getApplicationKey
        arguments:
          - dest: appId
            src: id
        operationId: getApplicationKey
      - alias: listGroupAssignments
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationGroupAssignments
      - alias: listKeys
        arguments:
          - dest: appId
            src: id
        operationId: listApplicationKeys
    x-okta-tags:
      - Application
    x-openapi-v3-discriminator:
      mapping:
        AUTO_LOGIN: '#/definitions/AutoLoginApplication'
        BASIC_AUTH: '#/definitions/BasicAuthApplication'
        BOOKMARK: '#/definitions/BookmarkApplication'
        BROWSER_PLUGIN: '#/definitions/BrowserPluginApplication'
        OPENID_CONNECT: '#/definitions/OpenIdConnectApplication'
        SAML_2_0: '#/definitions/SamlApplication'
        SECURE_PASSWORD_STORE: '#/definitions/SecurePasswordStoreApplication'
        WS_FEDERATION: '#/definitions/WsFederationApplication'
      propertyName: signOnMode
  ApplicationAccessibility:
    properties:
      errorRedirectUrl:
        type: string
      loginRedirectUrl:
        type: string
      selfService:
        type: boolean
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentials:
    properties:
      signing:
        $ref: '#/definitions/ApplicationCredentialsSigning'
      userNameTemplate:
        $ref: '#/definitions/ApplicationCredentialsUsernameTemplate'
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentialsOAuthClient:
    properties:
      autoKeyRotation:
        type: boolean
      client_id:
        type: string
      client_secret:
        type: string
      token_endpoint_auth_method:
        $ref: '#/definitions/OAuthEndpointAuthenticationMethod'
    x-okta-tags:
      - Application
  ApplicationCredentialsScheme:
    enum:
      - SHARED_USERNAME_AND_PASSWORD
      - EXTERNAL_PASSWORD_SYNC
      - EDIT_USERNAME_AND_PASSWORD
      - EDIT_PASSWORD_ONLY
      - ADMIN_SETS_CREDENTIALS
    type: string
    x-okta-tags:
      - Application
  ApplicationCredentialsSigning:
    properties:
      kid:
        type: string
      lastRotated:
        format: date-time
        readOnly: true
        type: string
      nextRotation:
        format: date-time
        readOnly: true
        type: string
      rotationMode:
        type: string
    type: object
    x-okta-tags:
      - Application
  ApplicationCredentialsUsernameTemplate:
    properties:
      suffix:
        type: string
      template:
        type: string
      type:
        type: string
    type: object
    x-okta-tags:
      - Application
  ApplicationGroupAssignment:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      priority:
        type: integer
      profile:
        additionalProperties:
          type: object
        type: object
    type: object
    x-okta-crud:
      - alias: delete
        arguments:
          - dest: appId
            parentSrc: appId
          - dest: groupId
            src: id
        operationId: deleteApplicationGroupAssignment
    x-okta-tags:
      - Application
  ApplicationLicensing:
    properties:
      seatCount:
        type: integer
    type: object
    x-okta-tags:
      - Application
  ApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/ApplicationSettingsApplication'
      implicitAssignment:
        type: boolean
      inlineHookId:
        type: string
      notifications:
        $ref: '#/definitions/ApplicationSettingsNotifications'
    type: object
    x-okta-tags:
      - Application
#GFS add application settings application properties
  ApplicationSettingsApplication:
    properties:
      groupFilter:
        type: string
      authnContextClassRef:
        type: string
      siteURL:
        type: string
      wReplyOverride:
        type: string
      usernameAttribute:
        type: string
      audienceRestriction:
        type: string
      groupName:
        type: string
      wReplyURL:
        type: string
      attributeStatements:
        type: string
      nameIDFormat:
        type: string
      realm:
        type: string
      groupValueFormat:
        type: string
    type: object
    x-okta-tags:
      - Application
#GFS
  ApplicationSettingsNotifications:
    properties:
      vpn:
        $ref: '#/definitions/ApplicationSettingsNotificationsVpn'
    type: object
    x-okta-tags:
      - Application
  ApplicationSettingsNotificationsVpn:
    properties:
      helpUrl:
        type: string
      message:
        type: string
      network:
        $ref: '#/definitions/ApplicationSettingsNotificationsVpnNetwork'
    type: object
    x-okta-tags:
      - Application
  ApplicationSettingsNotificationsVpnNetwork:
    properties:
      connection:
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Application
  ApplicationSignOnMode:
    enum:
      - BOOKMARK
      - BASIC_AUTH
      - BROWSER_PLUGIN
      - SECURE_PASSWORD_STORE
      - AUTO_LOGIN
      - WS_FEDERATION
      - SAML_2_0
      - OPENID_CONNECT
      - SAML_1_1
    type: string
    x-okta-tags:
      - Application
  ApplicationVisibility:
    properties:
      appLinks:
        additionalProperties:
          type: boolean
        type: object
      autoSubmitToolbar:
        type: boolean
      hide:
        $ref: '#/definitions/ApplicationVisibilityHide'
    type: object
    x-okta-tags:
      - Application
  ApplicationVisibilityHide:
    properties:
      iOS:
        type: boolean
      web:
        type: boolean
    type: object
    x-okta-tags:
      - Application
  AuthenticationProvider:
    properties:
      name:
        type: string
      type:
        $ref: '#/definitions/AuthenticationProviderType'
    type: object
    x-okta-tags:
      - User
  AuthenticationProviderType:
    enum:
      - ACTIVE_DIRECTORY
      - FEDERATION
      - LDAP
      - OKTA
      - SOCIAL
      - IMPORT
    type: string
    x-okta-tags:
      - User
  AutoLoginApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      settings:
        $ref: '#/definitions/AutoLoginApplicationSettings'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  AutoLoginApplicationSettings:
    properties:
      signOn:
        $ref: '#/definitions/AutoLoginApplicationSettingsSignOn'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  AutoLoginApplicationSettingsSignOn:
    properties:
      loginUrl:
        type: string
      redirectUrl:
        type: string
    x-okta-tags:
      - Application
  BasicApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/BasicApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  BasicApplicationSettingsApplication:
    properties:
      authURL:
        type: string
      url:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  BasicAuthApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      name:
        default: template_basic_auth
      settings:
        $ref: '#/definitions/BasicApplicationSettings'
    x-okta-defined-as:
      name: template_basic_auth
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  BookmarkApplication:
    properties:
      name:
        default: bookmark
      settings:
        $ref: '#/definitions/BookmarkApplicationSettings'
    x-okta-defined-as:
      name: bookmark
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  BookmarkApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/BookmarkApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  BookmarkApplicationSettingsApplication:
    properties:
      requestIntegration:
        type: boolean
      url:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  BrowserPluginApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
    x-openapi-v3-discriminator:
      mapping:
        template_swa: '#/definitions/SwaApplication'
        template_swa3field: '#/definitions/SwaThreeFieldApplication'
      propertyName: name
  CallFactor:
    properties:
      profile:
        $ref: '#/definitions/CallFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  CallFactorProfile:
    properties:
      phoneExtension:
        type: string
      phoneNumber:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  ChangePasswordRequest:
    properties:
      newPassword:
        $ref: '#/definitions/PasswordCredential'
      oldPassword:
        $ref: '#/definitions/PasswordCredential'
    type: object
    x-okta-tags:
      - User
  CreateSessionRequest:
    properties:
      sessionToken:
        type: string
    type: object
    x-okta-tags:
      - Session
  EmailAddress:
    properties:
      status:
        $ref: '#/definitions/EmailStatus'
        readOnly: true
      type:
        $ref: '#/definitions/EmailType'
        readOnly: true
      value:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - User
  EmailFactor:
    properties:
      profile:
        $ref: '#/definitions/EmailFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  EmailFactorProfile:
    properties:
      email:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  EmailStatus:
    enum:
      - VERIFIED
      - UNVERIFIED
    type: string
    x-okta-tags:
      - User
  EmailType:
    enum:
      - PRIMARY
      - SECONDARY
    type: string
    x-okta-tags:
      - User
  Factor:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      device:
        type: string
      deviceType:
        readOnly: true
        type: string
      factorType:
        $ref: '#/definitions/FactorType'
      id:
        readOnly: true
        type: string
      mfaStateTokenId:
        type: string
        x-okta-deprecated: 1.10.0
      profile:
        $ref: '#/definitions/FactorProfile'
      provider:
        $ref: '#/definitions/FactorProvider'
      rechallengeExistingFactor:
        type: boolean
      sessionId:
        type: string
      status:
        $ref: '#/definitions/FactorStatus'
        readOnly: true
      tokenLifetimeSeconds:
        type: integer
      userId:
        type: string
      verify:
        $ref: '#/definitions/VerifyFactorRequest'
    type: object
    x-okta-crud:
      - alias: delete
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: deleteFactor
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: activateFactor
      - alias: verify
        arguments:
          - dest: factorId
            src: id
          - dest: userId
            parentSrc: id
        operationId: verifyFactor
    x-okta-tags:
      - UserFactor
    x-openapi-v3-discriminator:
      mapping:
        call: '#/definitions/CallFactor'
        email: '#/definitions/EmailFactor'
        push: '#/definitions/PushFactor'
        question: '#/definitions/SecurityQuestionFactor'
        sms: '#/definitions/SmsFactor'
        token: '#/definitions/TokenFactor'
        'token:hardware': '#/definitions/HardwareFactor'
        'token:software:totp': '#/definitions/TotpFactor'
        u2f: '#/definitions/U2fFactor'
        web: '#/definitions/WebFactor'
      propertyName: factorType
  FactorProfile:
    properties: {}
    x-okta-tags:
      - UserFactor
  FactorProvider:
    enum:
      - OKTA
      - RSA
      - GOOGLE
      - SYMANTEC
      - DUO
      - YUBICO
      - FIDO
    type: string
    x-okta-tags:
      - UserFactor
  FactorResultType:
    enum:
      - SUCCESS
      - CHALLENGE
      - WAITING
      - FAILED
      - REJECTED
      - TIMEOUT
      - TIME_WINDOW_EXCEEDED
      - PASSCODE_REPLAYED
      - ERROR
    type: string
    x-okta-tags:
      - UserFactor
  FactorStatus:
    enum:
      - PENDING_ACTIVATION
      - ACTIVE
      - INACTIVE
      - NOT_SETUP
      - ENROLLED
      - DISABLED
      - EXPIRED
    type: string
    x-okta-tags:
      - UserFactor
  FactorType:
    enum:
      - push
      - sms
      - call
      - token
      - 'token:software:totp'
      - 'token:hardware'
      - question
      - web
      - email
      - u2f
      - webauthn
      - 'token:software'
      - custom
    type: string
    x-okta-tags:
      - UserFactor
  ForgotPasswordResponse:
    properties:
      resetPasswordUrl:
        readOnly: true
        type: string
    x-okta-tags:
      - User
#GFS removed read only
  Group:
    properties:
      _embedded:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      created:
        format: date-time
        #readOnly: true
        type: string
      id:
        #readOnly: true
        type: string
      lastMembershipUpdated:
        format: date-time
        #readOnly: true
        type: string
      lastUpdated:
        format: date-time
        #readOnly: true
        type: string
      objectClass:
        items:
          type: string
        #readOnly: true
        type: array
      profile:
        $ref: '#/definitions/GroupProfile'
      type:
        #readOnly: true
        type: string
#GFS
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: groupId
            src: id
          - dest: group
            self: true
        operationId: updateGroup
      - alias: delete
        arguments:
          - dest: groupId
            src: id
        operationId: deleteGroup
    x-okta-operations:
      - alias: removeUser
        arguments:
          - dest: groupId
            src: id
        operationId: removeGroupUser
      - alias: listUsers
        arguments:
          - dest: groupId
            src: id
        operationId: listGroupUsers
    x-okta-tags:
      - Group
  GroupCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    x-okta-tags:
      - Policy
  GroupProfile:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
    x-okta-tags:
      - Group
  GroupRule:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      actions:
        $ref: '#/definitions/GroupRuleAction'
      allGroupsValid:
        type: boolean
      conditions:
        $ref: '#/definitions/GroupRuleConditions'
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/GroupRuleStatus'
        readOnly: true
      type:
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: ruleId
            src: id
          - dest: groupRule
            self: true
        operationId: updateRule
      - alias: delete
        arguments:
          - dest: ruleId
            src: id
        operationId: deleteRule
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: ruleId
            src: id
        operationId: activateRule
      - alias: deactivate
        arguments:
          - dest: ruleId
            src: id
        operationId: deactivateRule
    x-okta-tags:
      - GroupRule
  GroupRuleAction:
    properties:
      assignUserToGroups:
        $ref: '#/definitions/GroupRuleGroupAssignment'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleConditions:
    properties:
      expression:
        $ref: '#/definitions/GroupRuleExpression'
      people:
        $ref: '#/definitions/GroupRulePeopleCondition'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleExpression:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleGroupAssignment:
    properties:
      groupIds:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleGroupCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  GroupRulePeopleCondition:
    properties:
      groups:
        $ref: '#/definitions/GroupRuleGroupCondition'
      users:
        $ref: '#/definitions/GroupRuleUserCondition'
    type: object
    x-okta-tags:
      - GroupRule
  GroupRuleStatus:
    enum:
      - ACTIVE
      - INACTIVE
      - INVALID
    type: string
    x-okta-tags:
      - GroupRule
  GroupRuleUserCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - GroupRule
  HardwareFactor:
    properties:
      profile:
        $ref: '#/definitions/HardwareFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  HardwareFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
#GFS add Hashed Password property
  HashedPassword:
    properties:
      algorithm:
        type: string
      workFactor:
        type: integer
      salt:
        type: string
      saltOrder:
        type: string
      value:
        format: password
        type: string
#GFS
  JsonWebKey:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      alg:
        readOnly: true
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      e:
        readOnly: true
        type: string
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      key_ops:
        items:
          type: string
        readOnly: true
        type: array
      kid:
        readOnly: true
        type: string
      kty:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      'n':
        readOnly: true
        type: string
      status:
        readOnly: true
        type: string
      use:
        readOnly: true
        type: string
      x5c:
        items:
          type: string
        readOnly: true
        type: array
      x5t:
        readOnly: true
        type: string
#GFS removed # from name
      'x5tS256':
#GFS
        readOnly: true
        type: string
      x5u:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Application
  LogActor:
    properties:
      alternateId:
        readOnly: true
        type: string
      detail:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      displayName:
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogAuthenticationContext:
    properties:
      authenticationProvider:
        $ref: '#/definitions/LogAuthenticationProvider'
        readOnly: true
        type: string
      authenticationStep:
        readOnly: true
        type: integer
      credentialProvider:
        items:
          $ref: '#/definitions/LogCredentialProvider'
        readOnly: true
        type: array
      credentialType:
        items:
          $ref: '#/definitions/LogCredentialType'
        readOnly: true
        type: array
      externalSessionId:
        readOnly: true
        type: string
      interface:
        readOnly: true
        type: string
      issuer:
        $ref: '#/definitions/LogIssuer'
        readOnly: true
    type: object
    x-okta-tags:
      - Log
  LogAuthenticationProvider:
    enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - ACTIVE_DIRECTORY
      - LDAP
      - FEDERATION
      - SOCIAL
      - FACTOR_PROVIDER
    type: string
    x-okta-tags:
      - Log
  LogClient:
    properties:
      device:
        readOnly: true
        type: string
      geographicalContext:
        $ref: '#/definitions/LogGeographicalContext'
        readOnly: true
      id:
        readOnly: true
        type: string
      ipAddress:
        readOnly: true
        type: string
      userAgent:
        $ref: '#/definitions/LogUserAgent'
        readOnly: true
      zone:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogCredentialProvider:
    enum:
      - OKTA_AUTHENTICATION_PROVIDER
      - RSA
      - SYMANTEC
      - GOOGLE
      - DUO
      - YUBIKEY
    type: string
    x-okta-tags:
      - Log
  LogCredentialType:
    enum:
      - OTP
      - SMS
      - PASSWORD
      - ASSERTION
      - IWA
      - EMAIL
      - OAUTH2
      - JWT
    type: string
    x-okta-tags:
      - Log
  LogDebugContext:
    properties:
      debugData:
        additionalProperties:
          type: object
        readOnly: true
        type: object
    type: object
    x-okta-tags:
      - Log
  LogEvent:
    properties:
      actor:
        $ref: '#/definitions/LogActor'
        readOnly: true
      authenticationContext:
        $ref: '#/definitions/LogAuthenticationContext'
        readOnly: true
      client:
        $ref: '#/definitions/LogClient'
        readOnly: true
      debugContext:
        $ref: '#/definitions/LogDebugContext'
        readOnly: true
      displayMessage:
        readOnly: true
        type: string
      eventType:
        readOnly: false
        type: string
      legacyEventType:
        readOnly: true
        type: string
      outcome:
        $ref: '#/definitions/LogOutcome'
        readOnly: true
      published:
        format: date-time
        readOnly: false
        type: string
      request:
        $ref: '#/definitions/LogRequest'
        readOnly: true
      securityContext:
        $ref: '#/definitions/LogSecurityContext'
        readOnly: true
      severity:
        $ref: '#/definitions/LogSeverity'
        readOnly: true
      target:
        items:
          $ref: '#/definitions/LogTarget'
        readOnly: false
        type: array
      transaction:
        $ref: '#/definitions/LogTransaction'
        readOnly: true
      uuid:
        readOnly: true
        type: string
      version:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogGeographicalContext:
    properties:
      city:
        readOnly: true
        type: string
      country:
        readOnly: true
        type: string
      geolocation:
        $ref: '#/definitions/LogGeolocation'
        readOnly: true
      postalCode:
        readOnly: true
        type: string
      state:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogGeolocation:
    properties:
      lat:
        format: double
        readOnly: true
        type: number
      lon:
        format: double
        readOnly: true
        type: number
    type: object
    x-okta-tags:
      - Log
  LogIpAddress:
    properties:
      geographicalContext:
        $ref: '#/definitions/LogGeographicalContext'
        readOnly: true
      ip:
        readOnly: true
        type: string
      source:
        readOnly: true
        type: string
      version:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogIssuer:
    properties:
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogOutcome:
    properties:
      reason:
        readOnly: true
        type: string
      result:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogRequest:
    properties:
      ipChain:
        items:
          $ref: '#/definitions/LogIpAddress'
        readOnly: true
        type: array
    type: object
    x-okta-tags:
      - Log
  LogSecurityContext:
    properties:
      asNumber:
        readOnly: true
        type: integer
      asOrg:
        readOnly: true
        type: string
      domain:
        readOnly: true
        type: string
      isProxy:
        readOnly: true
        type: boolean
      isp:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogSeverity:
    enum:
      - DEBUG
      - INFO
      - WARN
      - ERROR
    type: string
    x-okta-tags:
      - Log
  LogTarget:
    properties:
      alternateId:
        readOnly: true
        type: string
      detailEntry:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      displayName:
        readOnly: true
        type: string
      id:
        readOnly: false
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogTransaction:
    properties:
      detail:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      id:
        readOnly: true
        type: string
      type:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  LogUserAgent:
    properties:
      browser:
        readOnly: true
        type: string
      os:
        readOnly: true
        type: string
      rawUserAgent:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Log
  OAuthApplicationCredentials:
    properties:
      oauthClient:
        $ref: '#/definitions/ApplicationCredentialsOAuthClient'
    x-okta-parent: '#/definitions/ApplicationCredentials'
    x-okta-tags:
      - Application
  OAuthEndpointAuthenticationMethod:
    enum:
      - none
      - client_secret_post
      - client_secret_basic
      - client_secret_jwt
    type: string
    x-okta-tags:
      - Application
  OAuthGrantType:
    enum:
      - authorization_code
      - implicit
      - password
      - refresh_token
      - client_credentials
    type: string
    x-okta-tags:
      - Application
  OAuthResponseType:
    enum:
      - code
      - token
      - id_token
    type: string
    x-okta-tags:
      - Application
  OktaSignOnPolicy:
    properties:
      conditions:
        $ref: '#/definitions/OktaSignOnPolicyConditions'
    type: object
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyConditions:
    properties:
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRule:
    properties:
      actions:
        $ref: '#/definitions/OktaSignOnPolicyRuleActions'
      conditions:
        $ref: '#/definitions/OktaSignOnPolicyRuleConditions'
      name:
        type: string
    x-okta-parent: '#/definitions/PolicyRule'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleActions:
    properties:
      signon:
        $ref: '#/definitions/OktaSignOnPolicyRuleSignonActions'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleConditions:
    properties:
      authContext:
        $ref: '#/definitions/PolicyRuleAuthContextCondition'
      network:
        $ref: '#/definitions/PolicyNetworkCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleSignonActions:
    properties:
      access:
        enum:
          - ALLOW
          - DENY
        type: string
      factorLifetime:
        type: integer
      factorPromptMode:
        enum:
          - ALWAYS
          - DEVICE
          - SESSION
        type: string
      rememberDeviceByDefault:
        default: false
        type: boolean
      requireFactor:
        default: false
        type: boolean
      session:
        $ref: '#/definitions/OktaSignOnPolicyRuleSignonSessionActions'
    type: object
    x-okta-tags:
      - Policy
  OktaSignOnPolicyRuleSignonSessionActions:
    properties:
      maxSessionIdleMinutes:
        default: 120
        type: integer
      maxSessionLifetimeMinutes:
        default: 0
        type: integer
      usePersistentCookie:
        default: false
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  OpenIdConnectApplication:
    properties:
      credentials:
        $ref: '#/definitions/OAuthApplicationCredentials'
      name:
        default: oidc_client
      settings:
        $ref: '#/definitions/OpenIdConnectApplicationSettings'
    x-okta-defined-as:
      name: oidc_client
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  OpenIdConnectApplicationConsentMethod:
    enum:
      - REQUIRED
      - TRUSTED
    type: string
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettings:
    properties:
      oauthClient:
        $ref: '#/definitions/OpenIdConnectApplicationSettingsClient'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  OpenIdConnectApplicationSettingsClient:
    properties:
      application_type:
        $ref: '#/definitions/OpenIdConnectApplicationType'
      client_uri:
        type: string
      consent_method:
        $ref: '#/definitions/OpenIdConnectApplicationConsentMethod'
      grant_types:
        items:
          $ref: '#/definitions/OAuthGrantType'
        type: array
      logo_uri:
        type: string
      policy_uri:
        type: string
      redirect_uris:
        items:
          type: string
        type: array
      response_types:
        items:
          $ref: '#/definitions/OAuthResponseType'
        type: array
      tos_uri:
        type: string
    x-okta-tags:
      - Application
  OpenIdConnectApplicationType:
    enum:
      - web
      - native
      - browser
      - service
    type: string
    x-okta-tags:
      - Application
  PasswordCredential:
    properties:
      value:
        format: password
        type: string
#GFS add Hashed Password property
      hash:
        $ref: '#/definitions/HashedPassword'
#GFS
    type: object
    x-okta-tags:
      - User
  PasswordDictionary:
    properties:
      common:
        $ref: '#/definitions/PasswordDictionaryCommon'
    type: object
    x-okta-tags:
      - Policy
  PasswordDictionaryCommon:
    properties:
      exclude:
        default: false
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicy:
    properties:
      conditions:
        $ref: '#/definitions/PasswordPolicyConditions'
      settings:
        $ref: '#/definitions/PasswordPolicySettings'
    type: object
    x-okta-parent: '#/definitions/Policy'
    x-okta-tags:
      - Policy
  PasswordPolicyAuthenticationProviderCondition:
    properties:
      include:
        items:
          type: string
        type: array
      provider:
        enum:
          - ACTIVE_DIRECTORY
          - ANY
          - LDAP
          - OKTA
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyConditions:
    properties:
      authProvider:
        $ref: '#/definitions/PasswordPolicyAuthenticationProviderCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  PasswordPolicyDelegationSettings:
    properties:
      options:
        $ref: '#/definitions/PasswordPolicyDelegationSettingsOptions'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyDelegationSettingsOptions:
    properties:
      skipUnlock:
        type: boolean
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettings:
    properties:
      age:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsAge'
      complexity:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsComplexity'
      lockout:
        $ref: '#/definitions/PasswordPolicyPasswordSettingsLockout'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsAge:
    properties:
      expireWarnDays:
        default: 0
        type: integer
      historyCount:
        default: 0
        type: integer
      maxAgeDays:
        default: 0
        type: integer
      minAgeMinutes:
        default: 0
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsComplexity:
    properties:
      dictionary:
        $ref: '#/definitions/PasswordDictionary'
      excludeAttributes:
        default: 1
        items:
          type: string
        type: array
      excludeUsername:
        default: true
        type: boolean
      minLength:
        default: 8
        type: integer
      minLowerCase:
        default: 1
        type: integer
      minNumber:
        default: 1
        type: integer
      minSymbol:
        default: 1
        type: integer
      minUpperCase:
        default: 1
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyPasswordSettingsLockout:
    properties:
      autoUnlockMinutes:
        type: integer
      maxAttempts:
        type: integer
      showLockoutFailures:
        type: boolean
      userLockoutNotificationChannels:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmail:
    properties:
      properties:
        $ref: '#/definitions/PasswordPolicyRecoveryEmailProperties'
      status:
        enum:
          - ACTIVE
          - INACTIVE
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmailProperties:
    properties:
      recoveryToken:
        $ref: '#/definitions/PasswordPolicyRecoveryEmailRecoveryToken'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryEmailRecoveryToken:
    properties:
      tokenLifetimeMinutes:
        default: 10080
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryFactorSettings:
    properties:
      status:
        default: INACTIVE
        enum:
          - ACTIVE
          - INACTIVE
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryFactors:
    properties:
      okta_call:
        $ref: '#/definitions/PasswordPolicyRecoveryFactorSettings'
      okta_email:
        $ref: '#/definitions/PasswordPolicyRecoveryEmail'
      okta_sms:
        $ref: '#/definitions/PasswordPolicyRecoveryFactorSettings'
      recovery_question:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestion'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestion:
    properties:
      properties:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestionProperties'
        readOnly: true
      status:
        enum:
          - ACTIVE
          - INACTIVE
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestionComplexity:
    properties:
      minLength:
        readOnly: true
        type: integer
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoveryQuestionProperties:
    properties:
      complexity:
        $ref: '#/definitions/PasswordPolicyRecoveryQuestionComplexity'
        readOnly: true
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRecoverySettings:
    properties:
      factors:
        $ref: '#/definitions/PasswordPolicyRecoveryFactors'
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRule:
    properties:
      actions:
        $ref: '#/definitions/PasswordPolicyRuleActions'
        readOnly: false
      conditions:
        $ref: '#/definitions/PasswordPolicyRuleConditions'
        readOnly: false
      name:
        type: string
    type: object
    x-okta-parent: '#/definitions/PolicyRule'
    x-okta-tags:
      - Policy
  PasswordPolicyRuleAction:
    properties:
      access:
        enum:
          - ALLOW
          - DENY
        readOnly: false
        type: string
    type: object
    x-okta-tags:
      - Policy
  PasswordPolicyRuleActions:
    properties:
      passwordChange:
        $ref: '#/definitions/PasswordPolicyRuleAction'
      selfServicePasswordReset:
        $ref: '#/definitions/PasswordPolicyRuleAction'
      selfServiceUnlock:
        $ref: '#/definitions/PasswordPolicyRuleAction'
    x-okta-tags:
      - Policy
  PasswordPolicyRuleConditions:
    properties:
      network:
        $ref: '#/definitions/PolicyNetworkCondition'
      people:
        $ref: '#/definitions/PolicyPeopleCondition'
    x-okta-tags:
      - Policy
  PasswordPolicySettings:
    properties:
      delegation:
        $ref: '#/definitions/PasswordPolicyDelegationSettings'
      password:
        $ref: '#/definitions/PasswordPolicyPasswordSettings'
      recovery:
        $ref: '#/definitions/PasswordPolicyRecoverySettings'
    type: object
    x-okta-tags:
      - Policy
  Policy:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      created:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      name:
        type: string
      priority:
        type: integer
      status:
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        type: boolean
      type:
        $ref: '#/definitions/PolicyType'
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: policyId
            src: id
        operationId: getPolicy
      - alias: update
        arguments:
          - dest: policyId
            src: id
          - dest: policy
            self: true
        operationId: updatePolicy
      - alias: delete
        arguments:
          - dest: policyId
            src: id
        operationId: deletePolicy
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: policyId
            src: id
        operationId: activatePolicy
      - alias: deactivate
        arguments:
          - dest: policyId
            src: id
        operationId: deactivatePolicy
      - alias: listPolicyRules
        arguments:
          - dest: policyId
            src: id
        operationId: listPolicyRules
      - alias: createRule
        arguments:
          - dest: policyId
            src: id
        operationId: addPolicyRule
      - alias: getPolicyRule
        arguments:
          - dest: policyId
            src: id
        operationId: getPolicyRule
    x-okta-tags:
      - Policy
    x-openapi-v3-discriminator:
      mapping:
        OKTA_SIGN_ON: '#/definitions/OktaSignOnPolicy'
        PASSWORD: '#/definitions/PasswordPolicy'
      propertyName: type
  PolicyNetworkCondition:
    properties:
      connection:
        enum:
          - ANYWHERE
          - ZONE
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    type: object
    x-okta-tags:
      - Policy
  PolicyPeopleCondition:
    properties:
      groups:
        $ref: '#/definitions/GroupCondition'
      users:
        $ref: '#/definitions/UserCondition'
    type: object
    x-okta-tags:
      - Policy
  PolicyRule:
    properties:
      created:
        format: date-time
        readOnly: true
        type: string
      id:
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      priority:
        type: integer
      status:
        default: ACTIVE
        enum:
          - ACTIVE
          - INACTIVE
        type: string
      system:
        default: false
        type: boolean
      type:
        enum:
          - SIGN_ON
          - PASSWORD
        type: string
    type: object
    x-okta-crud:
      - alias: update
        arguments:
          - dest: ruleId
            src: id
          - dest: policyRule
            self: true
          - dest: policyId
            parentSrc: id
        operationId: updatePolicyRule
      - alias: delete
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: deletePolicyRule
    x-okta-operations:
      - alias: activate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: activatePolicyRule
      - alias: deactivate
        arguments:
          - dest: ruleId
            src: id
          - dest: policyId
            parentSrc: policyId
        operationId: deactivatePolicyRule
    x-okta-tags:
      - Policy
    x-openapi-v3-discriminator:
      mapping:
        PASSWORD: '#/definitions/PasswordPolicyRule'
        SIGN_ON: '#/definitions/OktaSignOnPolicyRule'
      propertyName: type
  PolicyRuleAuthContextCondition:
    properties:
      authType:
        enum:
          - ANY
          - RADIUS
        type: string
    type: object
    x-okta-tags:
      - Policy
  PolicyType:
    enum:
      - OAUTH_AUTHORIZATION_POLICY
      - OKTA_SIGN_ON
      - PASSWORD
    type: string
    x-okta-tags:
      - Policy
  PushFactor:
    properties:
      profile:
        $ref: '#/definitions/PushFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  PushFactorProfile:
    properties:
      credentialId:
        type: string
      deviceType:
        readOnly: true
        type: string
      name:
        type: string
      platform:
        readOnly: true
        type: string
      version:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  RecoveryQuestionCredential:
    properties:
      answer:
        type: string
      question:
        type: string
    type: object
    x-okta-tags:
      - User
  ResetPasswordToken:
    properties:
      resetPasswordUrl:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - User
  Role:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      assignmentType:
        enum:
          - GROUP
          - USER
        type: string
      created:
        format: date-time
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: string
      label:
        readOnly: true
        type: string
      lastUpdated:
        format: date-time
        readOnly: true
        type: string
      status:
        $ref: '#/definitions/RoleStatus'
        readOnly: true
      type:
        type: string
    type: object
    x-okta-tags:
      - User
  RoleStatus:
    enum:
      - ACTIVE
      - INACTIVE
    type: string
    x-okta-tags:
      - User
  SamlApplication:
    properties:
      settings:
        $ref: '#/definitions/SamlApplicationSettings'
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  SamlApplicationSettings:
    properties:
      signOn:
        $ref: '#/definitions/SamlApplicationSettingsSignOn'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SamlApplicationSettingsSignOn:
    properties:
      assertionSigned:
        type: boolean
      attributeStatements:
        items:
          $ref: '#/definitions/SamlAttributeStatement'
        type: array
      audience:
        type: string
      audienceOverride:
        type: string
      authnContextClassRef:
        type: string
      defaultRelayState:
        type: string
      destination:
        type: string
      destinationOverride:
        type: string
      digestAlgorithm:
        type: string
      honorForceAuthn:
        type: boolean
      idpIssuer:
        type: string
      recipient:
        type: string
      recipientOverride:
        type: string
      requestCompressed:
        type: boolean
      responseSigned:
        type: boolean
      signatureAlgorithm:
        type: string
      spIssuer:
        type: string
      ssoAcsUrl:
        type: string
      ssoAcsUrlOverride:
        type: string
      subjectNameIdFormat:
        type: string
      subjectNameIdTemplate:
        type: string
    x-okta-tags:
      - Application
  SamlAttributeStatement:
    properties:
      name:
        type: string
      namespace:
        type: string
      type:
        type: string
      values:
        items:
          type: string
        type: array
    x-okta-tags:
      - Application
  SchemeApplicationCredentials:
    properties:
      password:
        $ref: '#/definitions/PasswordCredential'
      revealPassword:
        type: boolean
      scheme:
        $ref: '#/definitions/ApplicationCredentialsScheme'
      signing:
        $ref: '#/definitions/ApplicationCredentialsSigning'
      userName:
        type: string
    x-okta-parent: '#/definitions/ApplicationCredentials'
    x-okta-tags:
      - Application
  SecurePasswordStoreApplication:
    properties:
      credentials:
        $ref: '#/definitions/SchemeApplicationCredentials'
      name:
        default: template_sps
      settings:
        $ref: '#/definitions/SecurePasswordStoreApplicationSettings'
    x-okta-defined-as:
      name: template_sps
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  SecurePasswordStoreApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SecurePasswordStoreApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SecurePasswordStoreApplicationSettingsApplication:
    properties:
      optionalField1:
        type: string
      optionalField1Value:
        type: string
      optionalField2:
        type: string
      optionalField2Value:
        type: string
      optionalField3:
        type: string
      optionalField3Value:
        type: string
      passwordField:
        type: string
      url:
        type: string
      usernameField:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  SecurityQuestion:
    properties:
      answer:
        type: string
      question:
        type: string
      questionText:
        type: string
    x-okta-tags:
      - UserFactor
  SecurityQuestionFactor:
    properties:
      profile:
        $ref: '#/definitions/SecurityQuestionFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  SecurityQuestionFactorProfile:
    properties:
      answer:
        type: string
      question:
        type: string
      questionText:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  Session:
    properties:
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      amr:
        items:
          $ref: '#/definitions/SessionAuthenticationMethod'
        readOnly: true
        type: array
      createdAt:
        format: date-time
        readOnly: true
        type: string
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      id:
        readOnly: true
        type: string
      idp:
        $ref: '#/definitions/SessionIdentityProvider'
        readOnly: true
      lastFactorVerification:
        format: date-time
        readOnly: true
        type: string
      lastPasswordVerification:
        format: date-time
        readOnly: true
        type: string
      login:
        readOnly: true
        type: string
      status:
        $ref: '#/definitions/SessionStatus'
        readOnly: true
      userId:
        readOnly: true
        type: string
    type: object
    x-okta-crud:
      - alias: read
        arguments:
          - dest: sessionId
            src: id
        operationId: getSession
      - alias: delete
        arguments:
          - dest: sessionId
            src: id
        operationId: endSession
    x-okta-operations:
      - alias: refresh
        arguments:
          - dest: sessionId
            src: id
        operationId: refreshSession
    x-okta-tags:
      - Session
  SessionAuthenticationMethod:
    enum:
      - pwd
      - swk
      - hwk
      - otp
      - sms
      - tel
      - geo
      - fpt
      - kba
      - mfa
    type: string
    x-okta-tags:
      - Session
  SessionIdentityProvider:
    properties:
      id:
        readOnly: true
        type: string
      type:
        $ref: '#/definitions/SessionIdentityProviderType'
        readOnly: true
    type: object
    x-okta-tags:
      - Session
  SessionIdentityProviderType:
    enum:
      - ACTIVE_DIRECTORY
      - LDAP
      - OKTA
      - FEDERATION
      - SOCIAL
    type: string
    x-okta-tags:
      - Session
  SessionStatus:
    enum:
      - ACTIVE
      - MFA_ENROLL
      - MFA_REQUIRED
    type: string
    x-okta-tags:
      - Session
  SmsFactor:
    properties:
      profile:
        $ref: '#/definitions/SmsFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  SmsFactorProfile:
    properties:
      phoneNumber:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  SwaApplication:
    properties:
      name:
        default: template_swa
      settings:
        $ref: '#/definitions/SwaApplicationSettings'
    x-okta-defined-as:
      name: template_swa
    x-okta-parent: '#/definitions/BrowserPluginApplication'
    x-okta-tags:
      - Application
  SwaApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SwaApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SwaApplicationSettingsApplication:
    properties:
      buttonField:
        type: string
      loginUrlRegex:
        type: string
      passwordField:
        type: string
      url:
        type: string
      usernameField:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  SwaThreeFieldApplication:
    properties:
      name:
        default: template_swa3field
      settings:
        $ref: '#/definitions/SwaThreeFieldApplicationSettings'
    x-okta-defined-as:
      name: template_swa3field
    x-okta-parent: '#/definitions/BrowserPluginApplication'
    x-okta-tags:
      - Application
  SwaThreeFieldApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/SwaThreeFieldApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  SwaThreeFieldApplicationSettingsApplication:
    properties:
      buttonSelector:
        type: string
      extraFieldSelector:
        type: string
      extraFieldValue:
        type: string
      loginUrlRegex:
        type: string
      passwordSelector:
        type: string
      targetUrl:
        type: string
      userNameSelector:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  TempPassword:
    properties:
      tempPassword:
        readOnly: true
        type: string
    x-okta-tags:
      - User
  TokenFactor:
    properties:
      profile:
        $ref: '#/definitions/TokenFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  TokenFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  TotpFactor:
    properties:
      profile:
        $ref: '#/definitions/TotpFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  TotpFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  U2fFactor:
    properties:
      profile:
        $ref: '#/definitions/U2fFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  U2fFactorProfile:
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
#GFS removed read only
  User:
    properties:
      _embedded:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        #readOnly: true
        type: object
      activated:
        format: date-time
        #readOnly: true
        type: string
      created:
        format: date-time
        #readOnly: true
        type: string
      credentials:
        $ref: '#/definitions/UserCredentials'
      id:
        #readOnly: true
        type: string
      lastLogin:
        format: date-time
        #readOnly: true
        type: string
      lastUpdated:
        format: date-time
        #readOnly: true
        type: string
      passwordChanged:
        format: date-time
        #readOnly: true
        type: string
      profile:
        $ref: '#/definitions/UserProfile'
      status:
        $ref: '#/definitions/UserStatus'
        #readOnly: true
      statusChanged:
        format: date-time
        #readOnly: true
        type: string
      transitioningToStatus:
        $ref: '#/definitions/UserStatus'
        #readOnly: true
    type: object
#GFS
    x-okta-crud:
      - alias: create
        arguments:
          - dest: user
            self: true
        operationId: createUser
      - alias: read
        arguments: []
        operationId: getUser
      - alias: update
        arguments:
          - dest: userId
            src: id
          - dest: user
            self: true
        operationId: updateUser
      - alias: delete
        arguments:
          - dest: userId
            src: id
          - dest: user
            self: true
        operationId: deactivateOrDeleteUser
    x-okta-operations:
      - alias: endAllSessions
        arguments:
          - dest: userId
            src: id
        operationId: endAllUserSessions
      - alias: listAppLinks
        arguments:
          - dest: userId
            src: id
        operationId: listAppLinks
      - alias: changePassword
        arguments:
          - dest: userId
            src: id
        operationId: changePassword
      - alias: changeRecoveryQuestion
        arguments:
          - dest: userId
            src: id
        operationId: changeRecoveryQuestion
      - alias: forgotPassword
        arguments:
          - dest: userId
            src: id
        operationId: forgotPassword
      - alias: listRoles
        arguments:
          - dest: userId
            src: id
        operationId: listAssignedRoles
      - alias: addRole
        arguments:
          - dest: userId
            src: id
        operationId: addRoleToUser
      - alias: removeRole
        arguments:
          - dest: userId
            src: id
        operationId: removeRoleFromUser
      - alias: listGroupTargetsForRole
        arguments:
          - dest: userId
            src: id
        operationId: listGroupTargetsForRole
      - alias: removeGroupTargetFromRole
        arguments:
          - dest: userId
            src: id
        operationId: removeGroupTargetFromRole
      - alias: addGroupTargetToRole
        arguments:
          - dest: userId
            src: id
        operationId: addGroupTargetToRole
      - alias: listGroups
        arguments:
          - dest: userId
            src: id
        operationId: listUserGroups
      - alias: activate
        arguments:
          - dest: userId
            src: id
        operationId: activateUser
      - alias: deactivate
        arguments:
          - dest: userId
            src: id
        operationId: deactivateUser
      - alias: suspend
        arguments:
          - dest: userId
            src: id
        operationId: suspendUser
      - alias: unsuspend
        arguments:
          - dest: userId
            src: id
        operationId: unsuspendUser
      - alias: resetPassword
        arguments:
          - dest: userId
            src: id
        operationId: resetPassword
      - alias: expirePassword
        arguments:
          - dest: userId
            src: id
        operationId: expirePassword
      - alias: unlock
        arguments:
          - dest: userId
            src: id
        operationId: unlockUser
      - alias: resetFactors
        arguments:
          - dest: userId
            src: id
        operationId: resetAllFactors
      - alias: addToGroup
        arguments:
          - dest: userId
            src: id
        operationId: addUserToGroup
      - alias: addFactor
        arguments:
          - dest: userId
            src: id
        operationId: addFactor
      - alias: listSupportedFactors
        arguments:
          - dest: userId
            src: id
        operationId: listSupportedFactors
      - alias: listFactors
        arguments:
          - dest: userId
            src: id
        operationId: listFactors
      - alias: listSupportedSecurityQuestions
        arguments:
          - dest: userId
            src: id
        operationId: listSupportedSecurityQuestions
      - alias: getFactor
        arguments:
          - dest: userId
            src: id
        operationId: getFactor
    x-okta-tags:
      - User
  UserActivationToken:
    properties:
      activationToken:
        readOnly: true
        type: string
      activationUrl:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - User
  UserCondition:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
    x-okta-tags:
      - Policy
  UserCredentials:
    properties:
      emails:
        items:
          $ref: '#/definitions/EmailAddress'
        type: array
      password:
        $ref: '#/definitions/PasswordCredential'
      provider:
        $ref: '#/definitions/AuthenticationProvider'
      recovery_question:
        $ref: '#/definitions/RecoveryQuestionCredential'
    type: object
    x-okta-tags:
      - User
  UserNextLogin:
    enum:
      - changePassword
    type: string
    x-okta-tags:
      - User
#GFS add custom attributes
  UserProfile:
    properties:
      contactID:
        type: string
      displayName:
        type: string
      email:
        type: string
      entitlements:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      login:
        type: string
      guid:
        type: string
      mobilePhone:
        type: string
      primaryPhone:
        type: string
      preferredLanguage:
        type: string
      secondEmail:
        type: string
      policyAgreements:
        type: string
    type: object
    x-okta-extensible: true
    x-okta-tags:
      - User
#GFS
#GFS mock schema endpoint
  UserSchema:
    properties:
      id:
        type: string
      '$schema':
        type: string
      name:
        type: string
      title:
        type: string
      description:
        type: string
      lastUpdated:
        format: date-time
        type: string
      created:
        format: date-time
        type: string
      definitions:
        $ref: '#/definitions/UserSchemaDefinition'
      type:
        type: string
      properties:
        type: array
        items:
          type: string
    x-okta-operations:
      - alias: read
        arguments: []
        operationId: getUser
    x-okta-tags:
      - UserSchema
  UserSchemaDefinition:
    properties:
      custom:
        $ref: '#/definitions/UserSchemaBase'
      base:
        $ref: '#/definitions/UserSchemaBase'
    x-okta-tags:
      - UserSchema
  UserSchemaBase:
    properties:
      id:
        type: string
      type:
        type: string
      properties:
        additionalProperties:
          $ref: '#/definitions/UserSchemaProperty'
        type: object
      required:
        type: array
        items:
          type: string
    x-okta-tags:
      - UserSchema
  UserSchemaProperty:
    properties:
      title:
        type: string
      type:
        type: string
      required:
        type: boolean
      mutability:
        type: string
      scope:
        type: string
      minLength:
        type: integer
      maxLength:
        type: integer
      permissions:
        $ref: '#/definitions/UserSchemaPermission'
    x-okta-tags:
      - UserSchema
  UserSchemaPermission:
    properties:
      principal:
        type: string
      action:
        type: string
    x-okta-tags:
      - UserSchema
#GFS
  UserStatus:
    enum:
      - STAGED
      - PROVISIONED
      - ACTIVE
      - RECOVERY
      - PASSWORD_EXPIRED
      - LOCKED_OUT
      - DEPROVISIONED
      - SUSPENDED
    type: string
    x-okta-tags:
      - User
  VerifyFactorRequest:
    properties:
      activationToken:
        type: string
      answer:
        type: string
      nextPassCode:
        type: string
      passCode:
        type: string
      tokenLifetimeSeconds:
        type: integer
    type: object
    x-okta-tags:
      - UserFactor
  VerifyFactorResponse:
    properties:
      _embedded:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      _links:
        additionalProperties:
          type: object
        readOnly: true
        type: object
      expiresAt:
        format: date-time
        readOnly: true
        type: string
      factorResult:
        $ref: '#/definitions/FactorResultType'
        readOnly: true
      factorResultMessage:
        readOnly: true
        type: string
    type: object
    x-okta-tags:
      - UserFactor
  WebFactor:
    properties:
      profile:
        $ref: '#/definitions/WebFactorProfile'
    x-okta-parent: '#/definitions/Factor'
    x-okta-tags:
      - UserFactor
  WebFactorProfile:
    properties:
      credentialId:
        type: string
    x-okta-parent: '#/definitions/FactorProfile'
    x-okta-tags:
      - UserFactor
  WsFederationApplication:
    properties:
      name:
        default: template_wsfed
      settings:
        $ref: '#/definitions/WsFederationApplicationSettings'
    x-okta-defined-as:
      name: template_wsfed
    x-okta-parent: '#/definitions/Application'
    x-okta-tags:
      - Application
  WsFederationApplicationSettings:
    properties:
      app:
        $ref: '#/definitions/WsFederationApplicationSettingsApplication'
    x-okta-parent: '#/definitions/ApplicationSettings'
    x-okta-tags:
      - Application
  WsFederationApplicationSettingsApplication:
    properties:
      attributeStatements:
        type: string
      audienceRestriction:
        type: string
      authnContextClassRef:
        type: string
      groupFilter:
        type: string
      groupName:
        type: string
      groupValueFormat:
        type: string
      nameIDFormat:
        type: string
      realm:
        type: string
      siteURL:
        type: string
      usernameAttribute:
        type: string
      wReplyOverride:
        type: boolean
      wReplyURL:
        type: string
    x-okta-parent: '#/definitions/ApplicationSettingsApplication'
    x-okta-tags:
      - Application
  Idp:
    properties:
      _links:
        additionalProperties:
          type: object
        type: object
      id:
        type: string
      externalId:
        type: string
      created:
        format: date-time
        type: string
      lastUpdated:
        format: date-time
        type: string
      profile:
        additionalProperties:
          type: object
        type: object
    type: object
    x-okta-tags:
      - Idp
  Idps:
    properties:
      id:
        type: string
      type:
        type: string
      status:
        type: string
      name:
        type: string
      created:
        format: date-time
        type: string
      lastUpdated:
        format: date-time
        type: string
      protocol:
        additionalProperties:
          type: object
        type: object
      policy:
        additionalProperties:
          type: object
        type: object
      _links:
        additionalProperties:
          type: object
        type: object
    type: object
    x-okta-tags:
      - Idp
      
